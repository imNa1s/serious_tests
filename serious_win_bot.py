import telebot
from telebot import types
from seriousbot.call_tsts_bot import CallWinTests

token = '5271986414:AAGyv59KpbcnBHu-SBHUWrh3tv1atUPqTjg'


def serioustestbot(token):
    bot = telebot.TeleBot(token)

    @bot.message_handler(commands=["start"])
    def start(m, res=False):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("–õ–æ–≥–∏–Ω —Ç–µ—Å—Ç—ã")
        item2 = types.KeyboardButton("–¢–µ—Å—Ç—ã —Ç–∏–∫–µ—Ç–æ–≤")
        item3 = types.KeyboardButton("–¢–µ—Å—Ç—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
        item4 = types.KeyboardButton("–¢–µ—Å—Ç—ã —Å—Ç—Ä–∞–Ω—ã")
        item5 = types.KeyboardButton("–¢–µ—Å—Ç—ã –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤")
        markup.add(item1)
        markup.add(item2)
        markup.add(item3)
        markup.add(item4)
        markup.add(item5)
        bot.send_message(m.chat.id, '\n–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é', reply_markup=markup)

    @bot.message_handler(content_types=["text"])
    def handle_text(message):
        if message.text.strip() == '–õ–æ–≥–∏–Ω —Ç–µ—Å—Ç—ã':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–õ–æ–≥–∏–Ω –≤ –∞–¥–º–∏–Ω–∫—É")
            item2 = types.KeyboardButton("–ù–µ—É–¥–∞—á–Ω—ã–π –ª–æ–≥–∏–º–Ω –≤ –∞–¥–º–∏–Ω–∫—É")
            item3 = types.KeyboardButton("–õ–æ–≥–∏–Ω –ø–∞—Ä—Ç–Ω—ë—Ä–∞ test —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É")
            item4 = types.KeyboardButton("/start")
            markup.add(item1)
            markup.add(item2)
            markup.add(item3)
            markup.add(item4)
            bot.send_message(message.chat.id, '\n–í—ã–±–µ—Ä–∏ —Ç—Ä–µ–±—É–µ–º—ã–π —Ç–µ—Å—Ç', reply_markup=markup)
        # –¢–µ—Å—Ç—ã –ª–æ–≥–∏–Ω–∞
        elif message.text.strip() == '–õ–æ–≥–∏–Ω –≤ –∞–¥–º–∏–Ω–∫—É':
            bot.send_message(message.chat.id, "–ù–∞—à—ë–ª, –∑–∞–ø—É—Å–∫–∞—é! üèÉ")
            date, answer = CallWinTests.bot_login()
            bot.send_message(message.chat.id, date)

        elif message.text.strip() == '–ù–µ—É–¥–∞—á–Ω—ã–π –ª–æ–≥–∏–º–Ω –≤ –∞–¥–º–∏–Ω–∫—É':
            bot.send_message(message.chat.id, "–ù–∞—à—ë–ª, –∑–∞–ø—É—Å–∫–∞—é! üèÉ")
            date, answer = CallWinTests.bot_fail_login()
            bot.send_message(message.chat.id, date)

        elif message.text.strip() == '–õ–æ–≥–∏–Ω –ø–∞—Ä—Ç–Ω—ë—Ä–∞ test —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É':
            bot.send_message(message.chat.id, "–ù–∞—à—ë–ª, –∑–∞–ø—É—Å–∫–∞—é! üèÉ")
            date, answer = CallWinTests.bot_partner_login()
            bot.send_message(message.chat.id, date)
        # –¢–µ—Å—Ç—ã —Ç–∏–∫–µ—Ç–æ–≤
        elif message.text.strip() == '–¢–µ—Å—Ç—ã —Ç–∏–∫–µ—Ç–æ–≤':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–¢–µ—Å—Ç —Ç–∏–∫–µ—Ç–∞ –æ—Ç –∞–¥–º–∏–Ω–∞")
            item2 = types.KeyboardButton("–¢–µ—Å—Ç —Ç–∏–∫–µ—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            item3 = types.KeyboardButton("/start")
            markup.add(item1)
            markup.add(item2)
            markup.add(item3)
            bot.send_message(message.chat.id, '\n–í—ã–±–µ—Ä–∏ —Ç—Ä–µ–±—É–µ–º—ã–π —Ç–µ—Å—Ç', reply_markup=markup)

        elif message.text.strip() == '–¢–µ—Å—Ç —Ç–∏–∫–µ—Ç–∞ –æ—Ç –∞–¥–º–∏–Ω–∞':
            bot.send_message(message.chat.id, "–ù–∞—à—ë–ª, –∑–∞–ø—É—Å–∫–∞—é! üèÉ")
            date = CallWinTests.bot_admin_tiket()
            bot.send_message(message.chat.id, date)

        elif message.text.strip() == '–¢–µ—Å—Ç —Ç–∏–∫–µ—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è':
            bot.send_message(message.chat.id, "–ù–∞—à—ë–ª, –∑–∞–ø—É—Å–∫–∞—é! üèÉ")
            date = CallWinTests.bot_partner_tiket()
            bot.send_message(message.chat.id, date)
        # –¢–µ—Å—Ç—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        elif message.text.strip() == '–¢–µ—Å—Ç—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
            item2 = types.KeyboardButton("/start")
            markup.add(item1)
            markup.add(item2)
            bot.send_message(message.chat.id, '\n–í—ã–±–µ—Ä–∏ —Ç—Ä–µ–±—É–µ–º—ã–π —Ç–µ—Å—Ç', reply_markup=markup)

        elif message.text.strip() == '–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏':
            bot.send_message(message.chat.id, "–ù–∞—à—ë–ª, –∑–∞–ø—É—Å–∫–∞—é! üèÉ")
            date = CallWinTests.bot_category()
            bot.send_message(message.chat.id, date)
        # –¢–µ—Å—Ç—ã —Å—Ç—Ä–∞–Ω—ã
        elif message.text.strip() == '–¢–µ—Å—Ç—ã —Å—Ç—Ä–∞–Ω—ã':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã")
            item2 = types.KeyboardButton("/start")
            markup.add(item1)
            markup.add(item2)
            bot.send_message(message.chat.id, '\n–í—ã–±–µ—Ä–∏ —Ç—Ä–µ–±—É–µ–º—ã–π —Ç–µ—Å—Ç', reply_markup=markup)

        elif message.text.strip() == '–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã':
            bot.send_message(message.chat.id, "–ù–∞—à—ë–ª, –∑–∞–ø—É—Å–∫–∞—é! üèÉ")
            date = CallWinTests.bot_country()
            bot.send_message(message.chat.id, date)
        # –¢–µ—Å—Ç—ã –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        elif message.text.strip() == '–¢–µ—Å—Ç—ã –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞")
            item2 = types.KeyboardButton("/start")
            markup.add(item1)
            markup.add(item2)
            bot.send_message(message.chat.id, '\n–í—ã–±–µ—Ä–∏ —Ç—Ä–µ–±—É–µ–º—ã–π —Ç–µ—Å—Ç', reply_markup=markup)

        elif message.text.strip() == '–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞':
            bot.send_message(message.chat.id, "–ù–∞—à—ë–ª, –∑–∞–ø—É—Å–∫–∞—é! üèÉ")
            date = CallWinTests.bot_create_source()
            bot.send_message(message.chat.id, date)

        else:
            bot.send_sticker(message.chat.id,
                             "CAACAgIAAxkBAAEEDRZiIh8ObfbsI_sBsTO6OSQ7B7gwfwACg08CAAFji0YMFnvL46C3JM8jBA")

    bot.polling()


if __name__ == '__main__':
    serioustestbot(token)
